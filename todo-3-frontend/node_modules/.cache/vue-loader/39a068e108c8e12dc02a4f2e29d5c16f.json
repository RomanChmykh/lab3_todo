{"remainingRequest":"C:\\Users\\Админ\\Desktop\\todo-3-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Админ\\Desktop\\todo-3-frontend\\src\\App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Админ\\Desktop\\todo-3-frontend\\src\\App.vue","mtime":1622904730948},{"path":"C:\\Users\\Админ\\Desktop\\todo-3-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Админ\\Desktop\\todo-3-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Админ\\Desktop\\todo-3-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Админ\\Desktop\\todo-3-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Админ\\Desktop\\todo-3-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKYm9keSB7CiAgICBmb250LWZhbWlseTogJ0hlbHZldGljYSBOZXVlJywgc2Fucy1zZXJpZjsKICAgIGJhY2tncm91bmQtY29sb3I6ICNERURFREU7Cn0KCi50b2RvLWFwcCB7CiAgICBoZWlnaHQ6IHJlbGF0aXZlOwogICAgd2lkdGg6IDUwMHB4OwogICAgcG9zaXRpb246IHJlbGF0aXZlOwp9CgouYnRuIHsKICAgIGZsb2F0OiByaWdodDsKICAgIGZvbnQtc2l6ZTogMTBweDsKICAgIGxpbmUtaGVpZ2h0OiAxcHg7Cn0KCi5mb290ZXIgewogICAgaGVpZ2h0OiByZWxhdGl2ZTsKICAgIHdpZHRoOiA2MDBweDsKICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4GA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n    <div id=\"app\">\n        <div class=\"container-fluid col-centered todo-app\">\n            <center><h1><strong>todos</strong></h1></center>\n            <input class=\"form-control\" v-model=\"newTodo\" v-on:keyup.enter=\"addTodo(todo)\">\n            <h3><i>uncompleted </i><span v-show=\"remaining\">({{ remaining.length }})</span></h3>\n            <ul class=\"list-group\" v-show=\"todos.length\">\n                <li class=\"list-group-item list-group-item-info\"\n                    v-for=\"todo in remaining\"\n                    :key=\"todo.id\">\n                    <span>{{ todo.task }}</span>\n                    <button class=\"btn btn-default\" v-on:click=\"removeTodo(todo)\">\n                        <span class=\"glyphicon glyphicon-remove\" />\n                    </button>\n\n                    <button class=\"btn btn-default\" @click=\"completed(todo)\">\n                        <span class=\"glyphicon glyphicon-ok\" />\n                    </button>\n                </li>\n            </ul>\n\n            <div v-if=\"complete.length\">\n                <h3><i>completed</i> ({{ complete.length }})</h3>\n                <ul class=\"list-group\">\n                    <li class=\"list-group-item list-group-item-success\"\n                        v-for=\"todo in complete\"\n                        :key=\"todo.id\">\n                        {{ todo.task }}\n                        <button class=\"btn btn-default\" @click=\"completed(todo)\"><span class=\"glyphicon glyphicon-ok\" /> </button>\n                    </li>\n                </ul>\n                <button class=\"btn btn-danger\" @click=\"clearAllCompleted()\">clear\n                    <span class=\"glyphicon glyphicon glyphicon-remove-sign\" />\n                </button>\n            </div>\n            <p v-else>Start adding some tasks!</p>\n        </div>\n    </div>\n</template>\n\n<script>\n  import axios from \"axios\"\n\n    var needDoList = [];\n    var completeList = [];\n\n    axios.get(\"http://localhost:3000/\")\n        .then(response => {\n            response.data.forEach((td) => {\n              if (td.done === false) {\n                needDoList.push({\n                  title: td.text,\n                  id: td._id,\n                  done: td.done\n                });\n              } else {\n                completeList.push({\n                  title: td.text,\n                  id: td._id,\n                  done: td.done\n                });\n              }\n            });\n        });\n\n    export default {\n        name: 'App',\n        data() {\n            return {\n                valueInput: '',\n                needDoList: needDoList,\n                completeList: completeList\n            };\n        },\n        computed: {\n            complete(todo) {\n                return this.todos.filter(this.isCompleted);\n            },\n            remaining(todo) {\n                return this.todos.filter(this.inProgress);\n            }\n        },\n        methods: {\n            isCompleted(todo) {\n                return todo.completed;\n            },\n            inProgress(todo) {\n                return ! this.isCompleted(todo);\n            },\n            addTodo(todo) {\n                let text = this.newTodo.trim();\n                this.todos.push({task: text,completed: false});\n                this.newTodo = '';\n            },\n            removeTodo(todo) {\n                this.todos.$remove(todo);\n            },\n            completed(todo) {\n                todo.completed = ! todo.completed;\n            },\n            clearAllCompleted() {\n                this.todos = this.todos.filter(this.inProgress);\n            }\n        }\n    }\n</script>\n\n<style>\n    body {\n        font-family: 'Helvetica Neue', sans-serif;\n        background-color: #DEDEDE;\n    }\n\n    .todo-app {\n        height: relative;\n        width: 500px;\n        position: relative;\n    }\n\n    .btn {\n        float: right;\n        font-size: 10px;\n        line-height: 1px;\n    }\n\n    .footer {\n        height: relative;\n        width: 600px;\n        position: relative;\n    }\n</style>\n"]}]}